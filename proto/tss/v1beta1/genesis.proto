syntax = "proto3";
package tss.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "tss/v1beta1/tss.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/bandprotocol/chain/v2/x/tss/types";

// GenesisState defines the tss module's genesis state.
message GenesisState {
  // params defines all the paramiters of the module.
  Params params = 1 [(gogoproto.nullable) = false];
  // group_count defines the number of groups.
  uint64 group_count = 2;
  // groups is an array containing information about each group.
  repeated Group groups = 3 [(gogoproto.nullable) = false];
  // members is an array containing information about each member of groups.
  repeated Member members = 4 [(gogoproto.nullable) = false];
  // signing_count defines the number of signers.
  uint64 signing_count = 5;
  // signings is an array containing information about each signing.
  repeated Signing signings = 6 [(gogoproto.nullable) = false];
  // des_genesis is an array containing the des of all the addressres.
  repeated DEGenesis des_genesis = 7 [(gogoproto.customname) = "DEsGenesis", (gogoproto.nullable) = false];
}

// Params defines the set of module parameters.
message Params {
  // max_group_size is the maximum of the member capacity of the group.
  uint64 max_group_size = 1;
  // max_d_e_size is the maximum of the de capacity of the member.
  uint64 max_d_e_size = 2;
  // creating_period is the number of blocks allowed to creating group signature.
  uint64 creating_period = 3;
  // signing_period is the number of blocks allowed to sign.
  uint64 signing_period = 4;
}

// DEGenesis defines an account address and de pair used in the tss module's genesis state.
message DEGenesis {
  // address is the address of the de holder.
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // de defines the difference de this balance holds.
  DE de = 2 [(gogoproto.customname) = "DE", (gogoproto.nullable) = false];
}
