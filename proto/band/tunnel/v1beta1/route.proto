syntax = "proto3";
package band.tunnel.v1beta1;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package            = "github.com/bandprotocol/chain/v3/x/tunnel/types";
option (gogoproto.equal_all) = true;

// TSSRoute represents a route for TSS packets and implements the RouteI interface.
message TSSRoute {
  option (cosmos_proto.implements_interface) = "RouteI";

  // destination_chain_id is the destination chain ID
  string destination_chain_id = 1 [(gogoproto.customname) = "DestinationChainID"];
  // destination_contract_address is the destination contract address
  string destination_contract_address = 2;
}

// TSSPacketReceipt represents a receipt for a TSS packet and implements the PacketReceiptI interface.
message TSSPacketReceipt {
  option (cosmos_proto.implements_interface) = "PacketReceiptI";

  // signing_id is the signing ID
  uint64 signing_id = 1 [
    (gogoproto.customname) = "SigningID",
    (gogoproto.casttype)   = "github.com/bandprotocol/chain/v3/x/bandtss/types.SigningID"
  ];
}
