package types_test

import (
	"encoding/hex"
	"testing"

	"github.com/stretchr/testify/require"

	feedstypes "github.com/bandprotocol/chain/v3/x/feeds/types"
	"github.com/bandprotocol/chain/v3/x/tunnel/types"
)

func TestEncodeABI(t *testing.T) {
	packet := types.Packet{
		TunnelID:  1,
		Sequence:  3,
		Prices:    []feedstypes.Price{{SignalID: "signal_01", Price: 2}},
		CreatedAt: 123,
	}

	encodingPacket, err := types.NewTssEncodingPacket(
		packet,
		"eth",
		"0xe00F1f85abDB2aF6760759547d450da68CE66Bb1",
		feedstypes.ENCODER_FIXED_POINT_ABI,
	)
	require.NoError(t, err)

	msg, err := encodingPacket.EncodeABI()
	require.NoError(t, err)

	expectedMsg := ("0000000000000000000000000000000000000000000000000000000000000020" +
		"0000000000000000000000000000000000000000000000000000000000000001" +
		"0000000000000000000000000000000000000000000000000000000000000003" +
		"00000000000000000000000000000000000000000000000000000000000000c0" +
		"0000000000000000000000000000000000000000000000000000000000000100" +
		"0000000000000000000000000000000000000000000000000000000000000160" +
		"000000000000000000000000000000000000000000000000000000000000007b" +
		"0000000000000000000000000000000000000000000000000000000000000003" +
		"6574680000000000000000000000000000000000000000000000000000000000" +
		"000000000000000000000000000000000000000000000000000000000000002a" +
		"307865303046316638356162444232614636373630373539353437643435306461363843453636426231" +
		"00000000000000000000000000000000000000000000" +
		"0000000000000000000000000000000000000000000000000000000000000001" +
		"00000000000000000000000000000000000000000000007369676e616c5f3031" +
		"0000000000000000000000000000000000000000000000000000000000000002")

	require.Equal(t, expectedMsg, hex.EncodeToString(msg))
}
